#
# $Id$
#
# Filter for all files
#
#
# PBREPO is replaced by the root URL to access the repository
filter PBREPO = $pb->{'repo'}

# PBSRC is replaced by the source package location after the repo
#filter PBSRC = src/%{name}-%{version}.tar.gz
# Used if virtual name != real name (perl, ...)
#filter PBSRC = src/%{srcname}-%{version}.tar.gz

# PBVER is replaced by the version ($pb->{'ver'} in code)
filter PBVER = $pb->{'ver'}

# PBDATE is replaced by the date ($pb->{'date'} in code)
filter PBDATE = $pb->{'date'}

# PBPATCHSRC is replaced by the patches names if value is yes. Patches are located under the pbpatch dir of the pkg.
#filter PBPATCHSRC = yes

# PBPATCHCMD is replaced by the patches commands if value is yes
#filter PBPATCHCMD = yes

# PBMULTISRC is replaced by the sources names if value is yes. Sources are located under the pbsrc dir of the pkg.
#filter PBMULTISRC = yes

# PBTAG is replaced by the tag ($pb->{'tag'} in code)
filter PBTAG = $pb->{'tag'}

# PBREV is replaced by the revision ($pb->{'rev'} in code)
filter PBREV = $pb->{'rev'}

# PBREALPKG is replaced by the package name ($pb->{'realpkg'} in code)
filter PBREALPKG = $pb->{'realpkg'}

# PBPKG is replaced by the package name ($pb->{'pkg'} in code)
filter PBPKG = $pb->{'pkg'}

# PBPROJ is replaced by the project name ($pb->{'proj'} in code)
filter PBPROJ = $pb->{'proj'}

# PBPACKAGER is replaced by the packager name ($pb->{'packager'} in code)
filter PBPACKAGER = $pb->{'packager'}

# PBDESC contains the description of the package
#filter PBDESC = Bla-Bla

# PBSUMMARY contains a short single line description of the package
#filter PBSUMMARY = Bla

# PBURL contains the URL of the Web site of the project
#filter PBURL = http://www.Lintel.org

# PBLOG is replaced by the changelog if value is yes
# and should be last as when used we need the %pb hash filled
#filter PBLOG = yes

